{"ast":null,"code":"\"use strict\";\n\nconst apiBaseUrl = require(\"./apiBaseUrl\").baseUrl;\nvar WAD_COLORS = [\"rgb(173, 35, 35)\",\n// Red\n\"rgb(42, 75, 215)\",\n// Blue\n\"rgb(87, 87, 87)\",\n// Dark Gray\n\"rgb(29, 105, 20)\",\n// Green\n\"rgb(129, 74, 25)\",\n// Brown\n\"rgb(129, 38, 192)\",\n// Purple\n\"rgb(160, 160, 160)\",\n// Lt Gray\n\"rgb(129, 197, 122)\",\n// Lt green\n\"rgb(157, 175, 255)\",\n// Lt blue\n\"rgb(41, 208, 208)\",\n// Cyan\n\"rgb(255, 146, 51)\",\n// Orange\n\"rgb(199, 183, 0)\",\n// Yellow\n\"rgb(233, 222, 187)\",\n// Tan\n\"rgb(255, 205, 243)\" // Pink\n// \"rgb(255, 255, 255)\", // White\n//\"rgb(0, 0, 0)\",       // Black\n];\n\nvar isAbsolute = new RegExp(\"^([a-z]+://|//)\", \"i\");\nvar isDataOrBlob = new RegExp(\"^(data|blob):\", \"i\");\nfunction prependApiBaseIfNeeded(url) {\n  if (isAbsolute.test(url) || isDataOrBlob.test(url)) {\n    return url; // already absolute\n  } else {\n    return apiBaseUrl + url; // turn relative into absolute\n  }\n}\n\nfunction polygonToSvgPath(polygon, left, top) {\n  // M 10,10 L 100,10 100,100 z    M 30,20 L 70,20 70,60 z\n  var path_strings = [];\n  for (var part of polygon) {\n    if (part.length < 2) {\n      continue;\n    }\n    path_strings.push(\"M\");\n    var first = true;\n    for (var point of part) {\n      path_strings.push(point[0] - left + \",\" + (point[1] - top));\n      if (isNaN(point[0]) || isNaN(point[1])) {\n        console.log(\"not showing invalid polygon, found NaN\");\n        return \"\";\n      }\n      if (first) {\n        path_strings.push(\"L\");\n        first = false;\n      }\n    }\n    path_strings.push(\"z\");\n  }\n  return path_strings.join(\" \");\n}\n\n/*\n\nData structures basic info...\n\nresult\n{\n    output_url:\n    output:\n    id:\n    err:\n}\n\n\nresultPageData\n{\n    result_data: {\n        inputs:[\n            {\n                is_img: true,\n                url: (relative or absolute)\n            }\n        ],\n        visualizer_data: {\n            list_key: 'Objects'\n            label_key: 'Object'\n        },\n        scale_applied: 1.333\n    }\n}\n\n\nannotatedResult - this is basically the merging of the 2 above\n{   err:\n    output_url:\n    output:\n    id:\n    inputs:[\n        {\n            is_img: true,\n            url: (relative or absolute)\n        }\n    ],\n    visualizer_data: {\n        list_key: 'Objects'\n        label_key: 'Object'\n    },\n    scale_applied: 1.333\n}\n\n\n*/\n// Take a result object from API call, and fetch additional data, and return the additional data merged in.\nasync function getAnnotatedResultFromResult(result) {\n  if (result.err) {\n    console.log(\"cannot get result page data for error result\");\n    return result;\n  }\n  var resultPageData = await fetch(apiBaseUrl + \"/get_standard_api_result_data/\" + result.id, {\n    credentials: \"include\"\n  });\n  resultPageData = await resultPageData.json();\n  var result_data = resultPageData.result_data;\n\n  // make merging of all the properties manually...\n  return {\n    err: result.err,\n    output: result.output,\n    output_url: result.output_url,\n    id: result.id,\n    inputs: result_data.inputs,\n    visualizer_data: result_data.visualizer_data,\n    scale_applied: result_data.scale_applied\n  };\n}\nfunction renderAnnotatedResultIntoElement(annotatedResult, element) {\n  element.innerHTML = \"\"; // remove everything to start\n  if (annotatedResult.err) {\n    element.innerHTML = err;\n    return false;\n  }\n  if (annotatedResult.output) {\n    // JSON or text output.\n    console.log(\"got json or text output\");\n    if (typeof annotatedResult.output === \"string\") {\n      var scroller = document.createElement(\"div\");\n      scroller.style.width = \"100%\";\n      scroller.style.height = \"100%\";\n      scroller.style.overflow = \"auto\";\n      scroller.style.display = \"flex\";\n      scroller.style.alignItems = \"center\";\n      scroller.style.flexDirection = \"column\";\n      element.appendChild(scroller);\n      var pre = document.createElement(\"pre\");\n      pre.textContent = annotatedResult.output;\n      pre.style.whiteSpace = \"pre-wrap\";\n      pre.style.margin = \"0px\";\n      scroller.appendChild(pre);\n      // Append inputs\n      for (var input of annotatedResult.inputs) {\n        if (input.is_img) {\n          var img_tag = document.createElement(\"img\");\n          img_tag.src = prependApiBaseIfNeeded(input.url);\n          img_tag.style.position = \"relative\";\n          img_tag.style.width = \"100%\";\n          img_tag.style.height = \"100%\";\n          img_tag.style.objectFit = \"contain\";\n          scroller.appendChild(img_tag);\n        }\n      }\n      return true;\n    } else if (typeof annotatedResult.output === \"object\") {\n      // If we uploaded an image, then we may be able to render the image with boxes on top\n      if (annotatedResult.inputs.length == 1 && annotatedResult.inputs[0].is_img && annotatedResult.visualizer_data) {\n        // single image input and we know how to visualize it.\n        console.log(\"have visualizer for result JSON\");\n        var resultscaler = document.createElement(\"iframe\");\n        // Set up a handler for when the frame loads - we need to handle this event\n        resultscaler.onload = function () {\n          // Firefox doesnt allow inner iframe manip until the iframe is loaded...\n          var innerDoc = resultscaler.contentDocument.body;\n          innerDoc.style.margin = \"0px\";\n          innerDoc.style.overflow = \"hidden\";\n\n          /*\n                     var css = `\n                        boundingbox:hover{\n                            background-color: #00ff00\n                        }\n                    `;\n                    var style = document.createElement('style');\n                     if (style.styleSheet) {\n                        style.styleSheet.cssText = css;\n                    } else {\n                        style.appendChild(document.createTextNode(css));\n                    }\n                     resultscaler.contentDocument.head.appendChild(style);\n          */\n\n          var bbox_container = document.createElement(\"boundingboxcontainer\");\n          bbox_container.style.position = \"relative\"; // the absolute positions are relative to this element\n          bbox_container.style.opacity = \"0.001\"; // the result are hidden until the iframe reflows - which is first when the img loads\n          innerDoc.appendChild(bbox_container);\n          var img_tag = document.createElement(\"img\");\n          img_tag.src = prependApiBaseIfNeeded(annotatedResult.inputs[0].url);\n          img_tag.style.position = \"absolute\";\n          bbox_container.appendChild(img_tag);\n          var iframe_reflow = function () {\n            console.log(\"iframe resize\");\n            resultscaler.contentDocument.body.style.transform = null;\n            var bodyWidth = resultscaler.contentDocument.body.scrollWidth;\n            var bodyHeight = resultscaler.contentDocument.body.scrollHeight;\n            var imgWidth = img_tag.offsetWidth;\n            var imgHeight = img_tag.offsetHeight;\n            var containerWidth = resultscaler.offsetWidth;\n            var containerHeight = resultscaler.offsetHeight;\n            var wExcess = 0;\n            var hExcess = 0;\n            if (imgWidth < bodyWidth && imgHeight < bodyHeight) {\n              var wScale = containerWidth / imgWidth;\n              var hScale = containerHeight / imgHeight;\n              var minScale = Math.min(wScale, hScale);\n              wExcess = containerWidth - imgWidth * minScale;\n              hExcess = containerHeight - imgHeight * minScale;\n            } else {\n              var wScale = containerWidth / bodyWidth;\n              var hScale = containerHeight / bodyHeight;\n              var minScale = Math.min(wScale, hScale);\n              wExcess = containerWidth - bodyWidth * minScale;\n              hExcess = containerHeight - bodyHeight * minScale;\n            }\n            wExcess = wExcess / minScale;\n            hExcess = hExcess / minScale;\n            resultscaler.contentDocument.body.style.transformOrigin = \"top left\";\n            resultscaler.contentDocument.body.style.transform = \"scale(\" + minScale + \")\";\n            bbox_container.style.setProperty(\"--scaleapplied\", minScale);\n            bbox_container.style.setProperty(\"--fontscale\", 100 / minScale + \"%\");\n            bbox_container.style.left = wExcess / 2 + \"px\";\n            bbox_container.style.top = hExcess / 2 + \"px\";\n            bbox_container.style.opacity = \"1\";\n          };\n          resultscaler.contentWindow.onresize = iframe_reflow;\n          img_tag.onload = iframe_reflow;\n          var processed_annotations = process_annotations(annotatedResult.output, annotatedResult.visualizer_data, annotatedResult.scale_applied);\n          console.log(\"processed annotations\", processed_annotations);\n          var i = 0;\n          for (var annotation of processed_annotations) {\n            var bbox = document.createElement(\"boundingbox\");\n            bbox.style.position = \"absolute\";\n            var left;\n            var top;\n            var width;\n            var height;\n            var color = WAD_COLORS[i++ % WAD_COLORS.length];\n            if (annotation.mask_vertices) {\n              var minx = null;\n              var miny = null;\n              var maxx = null;\n              var maxy = null;\n              for (var part of annotation.mask_vertices) {\n                for (var point of part) {\n                  var x = point[0];\n                  var y = point[1];\n                  if (minx === null || x < minx) {\n                    minx = x;\n                  }\n                  if (miny === null || y < miny) {\n                    miny = y;\n                  }\n                  if (maxx === null || x > maxx) {\n                    maxx = x;\n                  }\n                  if (maxy === null || y > maxy) {\n                    maxy = y;\n                  }\n                }\n              }\n              width = maxx - minx;\n              height = maxy - miny;\n              left = minx;\n              top = miny;\n              var svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n              svg.style.position = \"absolute\";\n              svg.style.overflow = \"visible\";\n              svg.style.width = width + \"px\";\n              svg.style.height = height + \"px\";\n              var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n              path.setAttributeNS(null, \"d\", polygonToSvgPath(annotation.mask_vertices, left, top));\n              path.style.fill = \"none\";\n              path.style.stroke = color;\n              path.style.strokeWidth = \"calc(2px / var(--scaleapplied))\"; // 2px at all scale levels\n\n              svg.appendChild(path);\n              bbox.appendChild(svg);\n              bbox.style.border = \"none\";\n            } else if (annotation.bounding_box) {\n              left = annotation.bounding_box[0];\n              top = annotation.bounding_box[1];\n              width = annotation.bounding_box[2];\n              height = annotation.bounding_box[3];\n              bbox.style.border = \"calc(2px / var(--scaleapplied)) solid \" + color;\n            } else {\n              throw new Exception(\"Neither mask_vertices or bounding_box is passed, unknown annotation format\");\n            }\n            bbox.style.left = left + \"px\";\n            bbox.style.top = top + \"px\";\n            bbox.style.width = width + \"px\";\n            bbox.style.height = height + \"px\";\n            bbox_container.appendChild(bbox);\n            var bbox_label = document.createElement(\"boundingboxlabel\");\n            bbox_label.textContent = annotation.caption;\n            bbox_label.style.color = \"white\";\n            bbox_label.style.fontFamily = \"arial\";\n            bbox_label.style.backgroundColor = color;\n            bbox_label.style.fontSize = \"var(--fontscale)\";\n            bbox_label.style.position = \"absolute\";\n            bbox.appendChild(bbox_label);\n          }\n        };\n        // Set the src which will end up triggering the onload event in all browsers.\n        resultscaler.src = \"about:blank\";\n        resultscaler.style.border = \"none\";\n        resultscaler.style.width = \"100%\";\n        resultscaler.style.height = \"100%\";\n        element.appendChild(resultscaler);\n        return true;\n      } else {\n        // not single image - perhaps multi image or text input.\n        // or no visualizer\n        console.log(\"no visualizer for result JSON\");\n        var scroller = document.createElement(\"div\");\n        scroller.style.width = \"100%\";\n        scroller.style.height = \"100%\";\n        scroller.style.overflow = \"auto\";\n        scroller.style.display = \"flex\";\n        scroller.style.alignItems = \"center\";\n        scroller.style.flexDirection = \"column\";\n        element.appendChild(scroller);\n        var pre = document.createElement(\"pre\");\n        pre.style.margin = \"0px\";\n        pre.textContent = JSON.stringify(annotatedResult.output, null, 4);\n        scroller.appendChild(pre);\n        // Append inputs\n        for (var input of annotatedResult.inputs) {\n          if (input.is_img) {\n            var img_tag = document.createElement(\"img\");\n            img_tag.src = prependApiBaseIfNeeded(input.url);\n            img_tag.style.width = \"100%\";\n            img_tag.style.height = \"79%\";\n            img_tag.style.objectFit = \"contain\";\n            scroller.appendChild(img_tag);\n          }\n        }\n        return true;\n        // We got JSON output for a multi image or text input ... don't bother showing the input right now\n      }\n    } else {\n      element.innerHTML = \"Model returned an unknown data type.\";\n      return false;\n    }\n  } else if (annotatedResult.output_url) {\n    // Image output.\n    console.log(\"got image output\");\n    // Just show the image.\n    var img_tag = document.createElement(\"img\");\n    img_tag.src = annotatedResult.output_url;\n    img_tag.style.position = \"relative\";\n    img_tag.style.width = \"100%\";\n    img_tag.style.height = \"100%\";\n    img_tag.style.objectFit = \"contain\";\n    element.appendChild(img_tag);\n    return true;\n  } else {\n    element.innerHTML = \"Model did not return an output or an error.\";\n    return false;\n  }\n}\nasync function renderResultIntoElement(result, element) {\n  console.log(\"getting result page data\");\n  var annotatedResult = await getAnnotatedResultFromResult(result);\n  console.log(\"got result page data\");\n  return renderAnnotatedResultIntoElement(annotatedResult, element);\n}\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction toTitleCase(str) {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\nfunction process_annotations(input_struct, visualizer_data, scale_applied) {\n  input_struct = JSON.parse(JSON.stringify(input_struct)); // cheap deep clone\n  var detections = input_struct[visualizer_data.list_key];\n  detections.sort(function (a, b) {\n    return b.confidence - a.confidence;\n  });\n  var count = detections.length;\n  var processed_annotations = [];\n  for (var i = 0; i < count; i++) {\n    var detection = detections[i];\n    var caption;\n    if (visualizer_data.label_key == \"demographic\") {\n      if (detection[visualizer_data.label_key]) {\n        caption = detection[visualizer_data.label_key]; // backwards compatible demog format\n      } else {\n        //\"White Male, 30-40\"\n        caption = detection[\"cultural_appearance\"] + \" \" + detection[\"gender\"] + \", \" + detection[\"age_range\"][0] + \"-\" + detection[\"age_range\"][1];\n      }\n    } else if (visualizer_data.label_key == \"people\") {\n      //produces \"Sad, White Male, 30-40, Ted Cruz\"\n      var parts = [];\n      if (detection[\"facial-expression-recognition\"] && detection[\"facial-expression-recognition\"][\"emotion\"] != null) {\n        parts.push(capitalizeFirstLetter(detection[\"facial-expression-recognition\"][\"emotion\"]));\n      }\n      if (detection[\"demographic-recognition\"] && detection[\"demographic-recognition\"][\"cultural_appearance\"] != null) {\n        parts.push(detection[\"demographic-recognition\"][\"cultural_appearance\"] + \" \" + detection[\"demographic-recognition\"][\"gender\"] + \", \" + detection[\"demographic-recognition\"][\"age_range\"][0] + \"-\" + detection[\"demographic-recognition\"][\"age_range\"][1]);\n      }\n      if (detection[\"celebrity-recognition\"] && detection[\"celebrity-recognition\"][\"name\"] != null && detection[\"celebrity-recognition\"][\"name\"] != \"unknown\") {\n        parts.push(toTitleCase(detection[\"celebrity-recognition\"][\"name\"]));\n      }\n      if (parts.length > 0) {\n        caption = parts.join(\", \");\n      } else {\n        caption = \"Face\";\n      }\n    } else if (visualizer_data.label_key == \"pose\") {\n      const named_segments = [[\"nose\", \"right_eye\"], [\"nose\", \"left_eye\"], [\"right_eye\", \"right_ear\"], [\"left_eye\", \"left_ear\"], [\"right_shoulder\", \"right_elbow\"], [\"left_shoulder\", \"left_elbow\"], [\"right_elbow\", \"right_hand\"], [\"left_elbow\", \"left_hand\"], [\"right_hip\", \"right_knee\"], [\"left_hip\", \"left_knee\"], [\"right_knee\", \"right_foot\"], [\"left_knee\", \"left_foot\"]];\n      caption = \"\"; // no caption for pose parts\n\n      var mask_vertices = [];\n      for (var pair of named_segments) {\n        var p1 = detection[visualizer_data.label_key][pair[0]];\n        var p2 = detection[visualizer_data.label_key][pair[1]];\n        if (p1 && p2) {\n          p1 = JSON.parse(JSON.stringify(p1)); // cheap deep clone\n          p2 = JSON.parse(JSON.stringify(p2)); // cheap deep clone\n          // Do not rescale here - let the mask rescale handle this\n          //                    p1[0] *= scale_applied;\n          //                    p1[1] *= scale_applied;\n          //                    p2[0] *= scale_applied;\n          //                    p2[1] *= scale_applied;\n          var polygon_part = [p1, p2];\n          mask_vertices.push(polygon_part);\n        }\n      }\n      detection.mask_vertices = mask_vertices;\n    } else {\n      caption = detection[visualizer_data.label_key]; // non demographic mode\n      if (caption && caption.constructor === String) {\n        //It's a string\n      } else {\n        // some other type of object\n        var keys = Object.keys(caption);\n        if (keys.length == 1) {\n          caption = caption[keys[0]]; // get the only property\n        } else {\n          caption = JSON.stringify(caption);\n        }\n      }\n    }\n    if (detection.bounding_box) {\n      detection.bounding_box[0] *= scale_applied;\n      detection.bounding_box[1] *= scale_applied;\n      detection.bounding_box[2] *= scale_applied;\n      detection.bounding_box[3] *= scale_applied;\n    }\n\n    // Note: this also handles pose results!\n    if (detection.mask_vertices) {\n      for (var part of detection.mask_vertices) {\n        for (var point of part) {\n          point[0] *= scale_applied;\n          point[1] *= scale_applied;\n        }\n      }\n    }\n    processed_annotations.push({\n      bounding_box: detection.bounding_box,\n      mask_vertices: detection.mask_vertices,\n      caption: caption\n    });\n  }\n  return processed_annotations;\n}\nmodule.exports = {\n  renderResultIntoElement: renderResultIntoElement,\n  renderAnnotatedResultIntoElement: renderAnnotatedResultIntoElement\n};","map":{"version":3,"names":["apiBaseUrl","require","baseUrl","WAD_COLORS","isAbsolute","RegExp","isDataOrBlob","prependApiBaseIfNeeded","url","test","polygonToSvgPath","polygon","left","top","path_strings","part","length","push","first","point","isNaN","console","log","join","getAnnotatedResultFromResult","result","err","resultPageData","fetch","id","credentials","json","result_data","output","output_url","inputs","visualizer_data","scale_applied","renderAnnotatedResultIntoElement","annotatedResult","element","innerHTML","scroller","document","createElement","style","width","height","overflow","display","alignItems","flexDirection","appendChild","pre","textContent","whiteSpace","margin","input","is_img","img_tag","src","position","objectFit","resultscaler","onload","innerDoc","contentDocument","body","bbox_container","opacity","iframe_reflow","transform","bodyWidth","scrollWidth","bodyHeight","scrollHeight","imgWidth","offsetWidth","imgHeight","offsetHeight","containerWidth","containerHeight","wExcess","hExcess","wScale","hScale","minScale","Math","min","transformOrigin","setProperty","contentWindow","onresize","processed_annotations","process_annotations","i","annotation","bbox","color","mask_vertices","minx","miny","maxx","maxy","x","y","svg","createElementNS","path","setAttributeNS","fill","stroke","strokeWidth","border","bounding_box","Exception","bbox_label","caption","fontFamily","backgroundColor","fontSize","JSON","stringify","renderResultIntoElement","capitalizeFirstLetter","string","charAt","toUpperCase","slice","toTitleCase","str","replace","txt","substr","toLowerCase","input_struct","parse","detections","list_key","sort","a","b","confidence","count","detection","label_key","parts","named_segments","pair","p1","p2","polygon_part","constructor","String","keys","Object","module","exports"],"sources":["/Users/victorzhu/Desktop/recipe-app/client/node_modules/deepai/lib/core/resultRendering.js"],"sourcesContent":["\"use strict\";\nconst apiBaseUrl = require(\"./apiBaseUrl\").baseUrl;\n\nvar WAD_COLORS = [\n  \"rgb(173, 35, 35)\", // Red\n  \"rgb(42, 75, 215)\", // Blue\n  \"rgb(87, 87, 87)\", // Dark Gray\n  \"rgb(29, 105, 20)\", // Green\n  \"rgb(129, 74, 25)\", // Brown\n  \"rgb(129, 38, 192)\", // Purple\n  \"rgb(160, 160, 160)\", // Lt Gray\n  \"rgb(129, 197, 122)\", // Lt green\n  \"rgb(157, 175, 255)\", // Lt blue\n  \"rgb(41, 208, 208)\", // Cyan\n  \"rgb(255, 146, 51)\", // Orange\n  \"rgb(199, 183, 0)\", // Yellow\n  \"rgb(233, 222, 187)\", // Tan\n  \"rgb(255, 205, 243)\", // Pink\n  // \"rgb(255, 255, 255)\", // White\n  //\"rgb(0, 0, 0)\",       // Black\n];\nvar isAbsolute = new RegExp(\"^([a-z]+://|//)\", \"i\");\nvar isDataOrBlob = new RegExp(\"^(data|blob):\", \"i\");\n\nfunction prependApiBaseIfNeeded(url) {\n  if (isAbsolute.test(url) || isDataOrBlob.test(url)) {\n    return url; // already absolute\n  } else {\n    return apiBaseUrl + url; // turn relative into absolute\n  }\n}\n\nfunction polygonToSvgPath(polygon, left, top) {\n  // M 10,10 L 100,10 100,100 z    M 30,20 L 70,20 70,60 z\n  var path_strings = [];\n  for (var part of polygon) {\n    if (part.length < 2) {\n      continue;\n    }\n\n    path_strings.push(\"M\");\n    var first = true;\n    for (var point of part) {\n      path_strings.push(point[0] - left + \",\" + (point[1] - top));\n      if (isNaN(point[0]) || isNaN(point[1])) {\n        console.log(\"not showing invalid polygon, found NaN\");\n        return \"\";\n      }\n      if (first) {\n        path_strings.push(\"L\");\n        first = false;\n      }\n    }\n    path_strings.push(\"z\");\n  }\n  return path_strings.join(\" \");\n}\n\n/*\n\nData structures basic info...\n\nresult\n{\n    output_url:\n    output:\n    id:\n    err:\n}\n\n\nresultPageData\n{\n    result_data: {\n        inputs:[\n            {\n                is_img: true,\n                url: (relative or absolute)\n            }\n        ],\n        visualizer_data: {\n            list_key: 'Objects'\n            label_key: 'Object'\n        },\n        scale_applied: 1.333\n    }\n}\n\n\nannotatedResult - this is basically the merging of the 2 above\n{   err:\n    output_url:\n    output:\n    id:\n    inputs:[\n        {\n            is_img: true,\n            url: (relative or absolute)\n        }\n    ],\n    visualizer_data: {\n        list_key: 'Objects'\n        label_key: 'Object'\n    },\n    scale_applied: 1.333\n}\n\n\n*/\n// Take a result object from API call, and fetch additional data, and return the additional data merged in.\nasync function getAnnotatedResultFromResult(result) {\n  if (result.err) {\n    console.log(\"cannot get result page data for error result\");\n    return result;\n  }\n  var resultPageData = await fetch(\n    apiBaseUrl + \"/get_standard_api_result_data/\" + result.id,\n    {\n      credentials: \"include\",\n    }\n  );\n  resultPageData = await resultPageData.json();\n  var result_data = resultPageData.result_data;\n\n  // make merging of all the properties manually...\n  return {\n    err: result.err,\n    output: result.output,\n    output_url: result.output_url,\n    id: result.id,\n    inputs: result_data.inputs,\n    visualizer_data: result_data.visualizer_data,\n    scale_applied: result_data.scale_applied,\n  };\n}\n\nfunction renderAnnotatedResultIntoElement(annotatedResult, element) {\n  element.innerHTML = \"\"; // remove everything to start\n  if (annotatedResult.err) {\n    element.innerHTML = err;\n    return false;\n  }\n  if (annotatedResult.output) {\n    // JSON or text output.\n    console.log(\"got json or text output\");\n    if (typeof annotatedResult.output === \"string\") {\n      var scroller = document.createElement(\"div\");\n      scroller.style.width = \"100%\";\n      scroller.style.height = \"100%\";\n      scroller.style.overflow = \"auto\";\n      scroller.style.display = \"flex\";\n      scroller.style.alignItems = \"center\";\n      scroller.style.flexDirection = \"column\";\n      element.appendChild(scroller);\n      var pre = document.createElement(\"pre\");\n      pre.textContent = annotatedResult.output;\n      pre.style.whiteSpace = \"pre-wrap\";\n      pre.style.margin = \"0px\";\n      scroller.appendChild(pre);\n      // Append inputs\n      for (var input of annotatedResult.inputs) {\n        if (input.is_img) {\n          var img_tag = document.createElement(\"img\");\n          img_tag.src = prependApiBaseIfNeeded(input.url);\n          img_tag.style.position = \"relative\";\n          img_tag.style.width = \"100%\";\n          img_tag.style.height = \"100%\";\n          img_tag.style.objectFit = \"contain\";\n          scroller.appendChild(img_tag);\n        }\n      }\n      return true;\n    } else if (typeof annotatedResult.output === \"object\") {\n      // If we uploaded an image, then we may be able to render the image with boxes on top\n      if (\n        annotatedResult.inputs.length == 1 &&\n        annotatedResult.inputs[0].is_img &&\n        annotatedResult.visualizer_data\n      ) {\n        // single image input and we know how to visualize it.\n        console.log(\"have visualizer for result JSON\");\n        var resultscaler = document.createElement(\"iframe\");\n        // Set up a handler for when the frame loads - we need to handle this event\n        resultscaler.onload = function () {\n          // Firefox doesnt allow inner iframe manip until the iframe is loaded...\n          var innerDoc = resultscaler.contentDocument.body;\n          innerDoc.style.margin = \"0px\";\n          innerDoc.style.overflow = \"hidden\";\n\n          /*\n\n                    var css = `\n                        boundingbox:hover{\n                            background-color: #00ff00\n                        }\n                    `;\n                    var style = document.createElement('style');\n\n                    if (style.styleSheet) {\n                        style.styleSheet.cssText = css;\n                    } else {\n                        style.appendChild(document.createTextNode(css));\n                    }\n\n                    resultscaler.contentDocument.head.appendChild(style);\n*/\n\n          var bbox_container = document.createElement(\"boundingboxcontainer\");\n          bbox_container.style.position = \"relative\"; // the absolute positions are relative to this element\n          bbox_container.style.opacity = \"0.001\"; // the result are hidden until the iframe reflows - which is first when the img loads\n          innerDoc.appendChild(bbox_container);\n          var img_tag = document.createElement(\"img\");\n          img_tag.src = prependApiBaseIfNeeded(annotatedResult.inputs[0].url);\n          img_tag.style.position = \"absolute\";\n          bbox_container.appendChild(img_tag);\n          var iframe_reflow = function () {\n            console.log(\"iframe resize\");\n            resultscaler.contentDocument.body.style.transform = null;\n            var bodyWidth = resultscaler.contentDocument.body.scrollWidth;\n            var bodyHeight = resultscaler.contentDocument.body.scrollHeight;\n            var imgWidth = img_tag.offsetWidth;\n            var imgHeight = img_tag.offsetHeight;\n            var containerWidth = resultscaler.offsetWidth;\n            var containerHeight = resultscaler.offsetHeight;\n            var wExcess = 0;\n            var hExcess = 0;\n            if (imgWidth < bodyWidth && imgHeight < bodyHeight) {\n              var wScale = containerWidth / imgWidth;\n              var hScale = containerHeight / imgHeight;\n              var minScale = Math.min(wScale, hScale);\n              wExcess = containerWidth - imgWidth * minScale;\n              hExcess = containerHeight - imgHeight * minScale;\n            } else {\n              var wScale = containerWidth / bodyWidth;\n              var hScale = containerHeight / bodyHeight;\n              var minScale = Math.min(wScale, hScale);\n              wExcess = containerWidth - bodyWidth * minScale;\n              hExcess = containerHeight - bodyHeight * minScale;\n            }\n            wExcess = wExcess / minScale;\n            hExcess = hExcess / minScale;\n            resultscaler.contentDocument.body.style.transformOrigin =\n              \"top left\";\n\n            resultscaler.contentDocument.body.style.transform =\n              \"scale(\" + minScale + \")\";\n            bbox_container.style.setProperty(\"--scaleapplied\", minScale);\n            bbox_container.style.setProperty(\n              \"--fontscale\",\n              100 / minScale + \"%\"\n            );\n\n            bbox_container.style.left = wExcess / 2 + \"px\";\n            bbox_container.style.top = hExcess / 2 + \"px\";\n            bbox_container.style.opacity = \"1\";\n          };\n          resultscaler.contentWindow.onresize = iframe_reflow;\n          img_tag.onload = iframe_reflow;\n          var processed_annotations = process_annotations(\n            annotatedResult.output,\n            annotatedResult.visualizer_data,\n            annotatedResult.scale_applied\n          );\n          console.log(\"processed annotations\", processed_annotations);\n          var i = 0;\n          for (var annotation of processed_annotations) {\n            var bbox = document.createElement(\"boundingbox\");\n            bbox.style.position = \"absolute\";\n\n            var left;\n            var top;\n            var width;\n            var height;\n            var color = WAD_COLORS[i++ % WAD_COLORS.length];\n\n            if (annotation.mask_vertices) {\n              var minx = null;\n              var miny = null;\n              var maxx = null;\n              var maxy = null;\n\n              for (var part of annotation.mask_vertices) {\n                for (var point of part) {\n                  var x = point[0];\n                  var y = point[1];\n\n                  if (minx === null || x < minx) {\n                    minx = x;\n                  }\n                  if (miny === null || y < miny) {\n                    miny = y;\n                  }\n                  if (maxx === null || x > maxx) {\n                    maxx = x;\n                  }\n                  if (maxy === null || y > maxy) {\n                    maxy = y;\n                  }\n                }\n              }\n\n              width = maxx - minx;\n              height = maxy - miny;\n\n              left = minx;\n              top = miny;\n\n              var svg = document.createElementNS(\n                \"http://www.w3.org/2000/svg\",\n                \"svg\"\n              );\n\n              svg.style.position = \"absolute\";\n              svg.style.overflow = \"visible\";\n              svg.style.width = width + \"px\";\n              svg.style.height = height + \"px\";\n\n              var path = document.createElementNS(\n                \"http://www.w3.org/2000/svg\",\n                \"path\"\n              );\n              path.setAttributeNS(\n                null,\n                \"d\",\n                polygonToSvgPath(annotation.mask_vertices, left, top)\n              );\n              path.style.fill = \"none\";\n              path.style.stroke = color;\n              path.style.strokeWidth = \"calc(2px / var(--scaleapplied))\"; // 2px at all scale levels\n\n              svg.appendChild(path);\n              bbox.appendChild(svg);\n\n              bbox.style.border = \"none\";\n            } else if (annotation.bounding_box) {\n              left = annotation.bounding_box[0];\n              top = annotation.bounding_box[1];\n              width = annotation.bounding_box[2];\n              height = annotation.bounding_box[3];\n\n              bbox.style.border =\n                \"calc(2px / var(--scaleapplied)) solid \" + color;\n            } else {\n              throw new Exception(\n                \"Neither mask_vertices or bounding_box is passed, unknown annotation format\"\n              );\n            }\n\n            bbox.style.left = left + \"px\";\n            bbox.style.top = top + \"px\";\n            bbox.style.width = width + \"px\";\n            bbox.style.height = height + \"px\";\n\n            bbox_container.appendChild(bbox);\n            var bbox_label = document.createElement(\"boundingboxlabel\");\n            bbox_label.textContent = annotation.caption;\n            bbox_label.style.color = \"white\";\n            bbox_label.style.fontFamily = \"arial\";\n            bbox_label.style.backgroundColor = color;\n            bbox_label.style.fontSize = \"var(--fontscale)\";\n            bbox_label.style.position = \"absolute\";\n            bbox.appendChild(bbox_label);\n          }\n        };\n        // Set the src which will end up triggering the onload event in all browsers.\n        resultscaler.src = \"about:blank\";\n        resultscaler.style.border = \"none\";\n        resultscaler.style.width = \"100%\";\n        resultscaler.style.height = \"100%\";\n        element.appendChild(resultscaler);\n        return true;\n      } else {\n        // not single image - perhaps multi image or text input.\n        // or no visualizer\n        console.log(\"no visualizer for result JSON\");\n        var scroller = document.createElement(\"div\");\n        scroller.style.width = \"100%\";\n        scroller.style.height = \"100%\";\n        scroller.style.overflow = \"auto\";\n        scroller.style.display = \"flex\";\n        scroller.style.alignItems = \"center\";\n        scroller.style.flexDirection = \"column\";\n        element.appendChild(scroller);\n        var pre = document.createElement(\"pre\");\n        pre.style.margin = \"0px\";\n        pre.textContent = JSON.stringify(annotatedResult.output, null, 4);\n        scroller.appendChild(pre);\n        // Append inputs\n        for (var input of annotatedResult.inputs) {\n          if (input.is_img) {\n            var img_tag = document.createElement(\"img\");\n            img_tag.src = prependApiBaseIfNeeded(input.url);\n            img_tag.style.width = \"100%\";\n            img_tag.style.height = \"79%\";\n            img_tag.style.objectFit = \"contain\";\n            scroller.appendChild(img_tag);\n          }\n        }\n        return true;\n        // We got JSON output for a multi image or text input ... don't bother showing the input right now\n      }\n    } else {\n      element.innerHTML = \"Model returned an unknown data type.\";\n      return false;\n    }\n  } else if (annotatedResult.output_url) {\n    // Image output.\n    console.log(\"got image output\");\n    // Just show the image.\n    var img_tag = document.createElement(\"img\");\n    img_tag.src = annotatedResult.output_url;\n    img_tag.style.position = \"relative\";\n    img_tag.style.width = \"100%\";\n    img_tag.style.height = \"100%\";\n    img_tag.style.objectFit = \"contain\";\n    element.appendChild(img_tag);\n    return true;\n  } else {\n    element.innerHTML = \"Model did not return an output or an error.\";\n    return false;\n  }\n}\n\nasync function renderResultIntoElement(result, element) {\n  console.log(\"getting result page data\");\n  var annotatedResult = await getAnnotatedResultFromResult(result);\n  console.log(\"got result page data\");\n  return renderAnnotatedResultIntoElement(annotatedResult, element);\n}\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction toTitleCase(str) {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n\nfunction process_annotations(input_struct, visualizer_data, scale_applied) {\n  input_struct = JSON.parse(JSON.stringify(input_struct)); // cheap deep clone\n  var detections = input_struct[visualizer_data.list_key];\n  detections.sort(function (a, b) {\n    return b.confidence - a.confidence;\n  });\n  var count = detections.length;\n  var processed_annotations = [];\n  for (var i = 0; i < count; i++) {\n    var detection = detections[i];\n    var caption;\n    if (visualizer_data.label_key == \"demographic\") {\n      if (detection[visualizer_data.label_key]) {\n        caption = detection[visualizer_data.label_key]; // backwards compatible demog format\n      } else {\n        //\"White Male, 30-40\"\n        caption =\n          detection[\"cultural_appearance\"] +\n          \" \" +\n          detection[\"gender\"] +\n          \", \" +\n          detection[\"age_range\"][0] +\n          \"-\" +\n          detection[\"age_range\"][1];\n      }\n    } else if (visualizer_data.label_key == \"people\") {\n      //produces \"Sad, White Male, 30-40, Ted Cruz\"\n      var parts = [];\n      if (\n        detection[\"facial-expression-recognition\"] &&\n        detection[\"facial-expression-recognition\"][\"emotion\"] != null\n      ) {\n        parts.push(\n          capitalizeFirstLetter(\n            detection[\"facial-expression-recognition\"][\"emotion\"]\n          )\n        );\n      }\n      if (\n        detection[\"demographic-recognition\"] &&\n        detection[\"demographic-recognition\"][\"cultural_appearance\"] != null\n      ) {\n        parts.push(\n          detection[\"demographic-recognition\"][\"cultural_appearance\"] +\n            \" \" +\n            detection[\"demographic-recognition\"][\"gender\"] +\n            \", \" +\n            detection[\"demographic-recognition\"][\"age_range\"][0] +\n            \"-\" +\n            detection[\"demographic-recognition\"][\"age_range\"][1]\n        );\n      }\n      if (\n        detection[\"celebrity-recognition\"] &&\n        detection[\"celebrity-recognition\"][\"name\"] != null &&\n        detection[\"celebrity-recognition\"][\"name\"] != \"unknown\"\n      ) {\n        parts.push(toTitleCase(detection[\"celebrity-recognition\"][\"name\"]));\n      }\n      if (parts.length > 0) {\n        caption = parts.join(\", \");\n      } else {\n        caption = \"Face\";\n      }\n    } else if (visualizer_data.label_key == \"pose\") {\n      const named_segments = [\n        [\"nose\", \"right_eye\"],\n        [\"nose\", \"left_eye\"],\n        [\"right_eye\", \"right_ear\"],\n        [\"left_eye\", \"left_ear\"],\n        [\"right_shoulder\", \"right_elbow\"],\n        [\"left_shoulder\", \"left_elbow\"],\n        [\"right_elbow\", \"right_hand\"],\n        [\"left_elbow\", \"left_hand\"],\n        [\"right_hip\", \"right_knee\"],\n        [\"left_hip\", \"left_knee\"],\n        [\"right_knee\", \"right_foot\"],\n        [\"left_knee\", \"left_foot\"],\n      ];\n      caption = \"\"; // no caption for pose parts\n\n      var mask_vertices = [];\n      for (var pair of named_segments) {\n        var p1 = detection[visualizer_data.label_key][pair[0]];\n        var p2 = detection[visualizer_data.label_key][pair[1]];\n\n        if (p1 && p2) {\n          p1 = JSON.parse(JSON.stringify(p1)); // cheap deep clone\n          p2 = JSON.parse(JSON.stringify(p2)); // cheap deep clone\n          // Do not rescale here - let the mask rescale handle this\n          //                    p1[0] *= scale_applied;\n          //                    p1[1] *= scale_applied;\n          //                    p2[0] *= scale_applied;\n          //                    p2[1] *= scale_applied;\n          var polygon_part = [p1, p2];\n          mask_vertices.push(polygon_part);\n        }\n      }\n      detection.mask_vertices = mask_vertices;\n    } else {\n      caption = detection[visualizer_data.label_key]; // non demographic mode\n      if (caption && caption.constructor === String) {\n        //It's a string\n      } else {\n        // some other type of object\n        var keys = Object.keys(caption);\n        if (keys.length == 1) {\n          caption = caption[keys[0]]; // get the only property\n        } else {\n          caption = JSON.stringify(caption);\n        }\n      }\n    }\n\n    if (detection.bounding_box) {\n      detection.bounding_box[0] *= scale_applied;\n      detection.bounding_box[1] *= scale_applied;\n      detection.bounding_box[2] *= scale_applied;\n      detection.bounding_box[3] *= scale_applied;\n    }\n\n    // Note: this also handles pose results!\n    if (detection.mask_vertices) {\n      for (var part of detection.mask_vertices) {\n        for (var point of part) {\n          point[0] *= scale_applied;\n          point[1] *= scale_applied;\n        }\n      }\n    }\n    processed_annotations.push({\n      bounding_box: detection.bounding_box,\n      mask_vertices: detection.mask_vertices,\n      caption: caption,\n    });\n  }\n  return processed_annotations;\n}\n\nmodule.exports = {\n  renderResultIntoElement: renderResultIntoElement,\n  renderAnnotatedResultIntoElement: renderAnnotatedResultIntoElement,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}