{"ast":null,"code":"var _jsxFileName = \"/Users/victorzhu/Desktop/recipe-app/client/src/pages/SingleRecipe.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst deepai = require('deepai');\n\n// const apiUrl = process.env.REACT_APP_API_URL;\n\nconst apiKey = process.env.REACT_APP_API_KEY;\nexport function SingleRecipe() {\n  _s();\n  const {\n    recipeId\n  } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  useEffect(() => {\n    axios.get(`http://localhost:3001/recipes/${recipeId}`).then(response => {\n      setRecipe(response.data);\n      deepai.setApiKey(apiKey);\n      console.log(apiKey);\n      deepai.callStandardApi(\"text2img\", {\n        text: response.data.title\n      }).then(resp => {\n        setImageUrl(resp.output_url);\n      }).catch(error => {\n        console.error('Error generating image:', error);\n      });\n    }).catch(error => {\n      console.error('Error fetching recipe:', error);\n    });\n  }, [recipeId]);\n\n  // useEffect(() => {\n  //     const response = await deepai.callStandardApi(\"text2img\", { text: \"YOUR_TEXT_URL\" });\n  //     setImageUrl(response.data.imageUrl);\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-recipe-page h-full w-screen flex flex-col items-center justify-center font-oswald\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-recipe-header w-full bg-slate-700 flex justify-start text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-recipe-text-container mt-36 mb-4 ml-32\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-6xl text-white\",\n          children: recipe ? recipe.title : \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-detail-container flex flex-col items-center py-16 mx-24\",\n      children: [imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"Generated Image\",\n        className: \"object-cover shadow w-3/5 mb-12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/salmon.jpeg\",\n        alt: \"pic\",\n        className: \"object-cover shadow w-3/5 mb-12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), recipe ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-5xl mb-6\",\n          children: [\"Posted By: \", recipe.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-5xl mb-6\",\n          children: [\"Time to Cook: \", recipe.timeToCook, \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-5xl mb-6\",\n            children: \"Ingredients:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-decimal ml-8 text-3xl mb-2\",\n              children: ingredient\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-5xl mb-4\",\n            children: \"Instructions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: recipe.instructions.map((instruction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-decimal ml-8 text-3xl mb-2\",\n              children: instruction\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(SingleRecipe, \"HWeMqxR1AICokRSmrBuk2CbRbhw=\", false, function () {\n  return [useParams];\n});\n_c = SingleRecipe;\nvar _c;\n$RefreshReg$(_c, \"SingleRecipe\");","map":{"version":3,"names":["axios","useState","useEffect","useParams","jsxDEV","_jsxDEV","deepai","require","apiKey","process","env","REACT_APP_API_KEY","SingleRecipe","_s","recipeId","recipe","setRecipe","imageUrl","setImageUrl","get","then","response","data","setApiKey","console","log","callStandardApi","text","title","resp","output_url","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","username","timeToCook","ingredients","map","ingredient","index","instructions","instruction","_c","$RefreshReg$"],"sources":["/Users/victorzhu/Desktop/recipe-app/client/src/pages/SingleRecipe.tsx"],"sourcesContent":["import axios from \"axios\"\nimport { useState , useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nconst deepai = require('deepai');\n\n\n// const apiUrl = process.env.REACT_APP_API_URL;\n\ninterface Recipe {\n    title: string;\n    author: string;\n    username: string;\n    timeToCook: number;\n    ingredients: string[];\n    instructions: string[];\n}\n\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nexport function SingleRecipe() {\n\n    const { recipeId } = useParams();\n    const [recipe, setRecipe] = useState<Recipe | null>(null);\n    const [imageUrl, setImageUrl] = useState('');\n\n\n\n\n    useEffect(() => {\n        axios.get<Recipe>(`http://localhost:3001/recipes/${recipeId}`)\n          .then((response) => {\n            setRecipe(response.data);\n\n            deepai.setApiKey(apiKey);\n            console.log(apiKey);\n            deepai.callStandardApi(\"text2img\", { text: response.data.title })\n                .then((resp: any) => {\n                    setImageUrl(resp.output_url);\n                })\n                .catch((error: any) => {\n                    console.error('Error generating image:', error);\n                });\n          })\n          .catch((error) => {\n            console.error('Error fetching recipe:', error);\n          });\n    }, [recipeId]);\n\n    // useEffect(() => {\n    //     const response = await deepai.callStandardApi(\"text2img\", { text: \"YOUR_TEXT_URL\" });\n    //     setImageUrl(response.data.imageUrl);\n    // }, []);\n\n    return (\n        <div className=\"single-recipe-page h-full w-screen flex flex-col items-center justify-center font-oswald\">\n            <div className='single-recipe-header w-full bg-slate-700 flex justify-start text-center'>\n                <div className='single-recipe-text-container mt-36 mb-4 ml-32'>\n                    \n                <h1 className='text-6xl text-white'>\n                    {recipe ? recipe.title : \"Loading...\"}\n                </h1>\n\n                </div>\n            </div>\n            <div className=\"recipe-detail-container flex flex-col items-center py-16 mx-24\">\n                {imageUrl ? (\n                    <img src={imageUrl} alt=\"Generated Image\" className=\"object-cover shadow w-3/5 mb-12\" />\n                ) : (\n                    <img src=\"/images/salmon.jpeg\" alt=\"pic\" className=\"object-cover shadow w-3/5 mb-12\" />\n                )}\n                {recipe ? (\n                    <div>\n                    <h2 className='text-5xl mb-6'>Posted By: {recipe.username}</h2>\n                    <h2 className='text-5xl mb-6'>Time to Cook: {recipe.timeToCook} minutes</h2>\n                    \n                    <div>\n                        <h3 className='text-5xl mb-6'>Ingredients:</h3>\n                        <ul>\n                        {recipe.ingredients.map((ingredient, index) => (\n                            <li className=\"list-decimal ml-8 text-3xl mb-2\" key={index}>{ingredient}</li>\n                        ))}\n                        </ul>\n                    </div>\n                    \n                    <div>\n                        <h3 className='text-5xl mb-4'>Instructions:</h3>\n                        <ol>\n                        {recipe.instructions.map((instruction, index) => (\n                            <li className=\"list-decimal ml-8 text-3xl mb-2\" key={index}>{instruction}</li>\n                        ))}\n                        </ol>\n                    </div>\n                    </div>\n                ) : (\n                    <p>Loading...</p>\n                )}\n            </div>\n            \n        </div>\n    )\n    \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}